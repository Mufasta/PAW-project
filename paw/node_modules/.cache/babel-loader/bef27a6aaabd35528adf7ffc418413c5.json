{"ast":null,"code":"var _jsxFileName = \"/Users/mariummannan/Desktop/PAW-MASTER/PAW-project/paw/src/Components/CatAPI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CatAPI = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://api.example.com/items\", {\n      headers: {\n        'x-api-key': `70333dc8-3e31-4380-b622-48fdc97947cb`\n      }\n    }).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this);\n  }\n};\n\n_s(CatAPI, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = CatAPI;\nexport default CatAPI;\n/* Works fine but trying to make it a function\nconst api = axios.create({\n    baseURL: `https://api.thecatapi.com/v1/breeds`,\n    headers: {\n        'x-api-key': `70333dc8-3e31-4380-b622-48fdc97947cb`        \n    }\n})\n\nclass CatAPI extends React.Component {\n    state = {\n        breeds: [],\n        breedImage: []\n    }\n\n    componentDidMount() { \n        this.mounted = true; \n    }\n    \n\n    constructor(){\n        super();\n        api.get('/').then(res =>{\n            if(this.mounted){\n                this.setState({breeds: res.data})\n            }\n            \n        })\n        \n    }\n    render() {\n      return (\n          <header>\n              \n              {this.state.breeds.map(breeds => \n                \n                <h2 key = {breeds.id}>\n                    \n                        <ul>\n                            <div>{breeds.name}</div>\n                            <div>{breeds.description}</div>\n                            <div>{breeds.temperament}</div>\n                            <div>Average Life Span: {breeds.life_span}</div>\n                            <div>Adaptability: {breeds.adaptability}</div>\n                            <div>Affection Level: {breeds.affection_level}</div>\n                        </ul>\n                    \n                </h2>)}\n          </header>\n      )\n    }\n}\n\nexport default CatAPI\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CatAPI\");","map":{"version":3,"sources":["/Users/mariummannan/Desktop/PAW-MASTER/PAW-project/paw/src/Components/CatAPI.js"],"names":["React","useEffect","useState","CatAPI","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","headers","then","res","json","result","message","map","item","name","id"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CAHiB,CAIjB;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,+BAAD,EAAiC;AAClCC,MAAAA,OAAO,EAAE;AACL,qBAAc;AADT;AADyB,KAAjC,CAAL,CAKCC,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAOKG,MAAD,IAAY;AACZR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACM,MAAD,CAAR;AACC,KAVL,EAWI;AACA;AACA;AACCX,IAAAA,KAAD,IAAW;AACXG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACC,KAjBL;AAmBH,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACY,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFH,MAES,IAAI,CAACV,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,gBACGE,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACb;AAAA,kBACGA,IAAI,CAACC;AADR,SAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AAEN,CA7CD;;GAAMjB,M;;KAAAA,M;AA+CN,eAAeA,MAAf;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n\nimport React, { useEffect, useState } from \"react\";\n\n\nconst CatAPI = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n        fetch(\"https://api.example.com/items\",{\n            headers: {\n                'x-api-key': `70333dc8-3e31-4380-b622-48fdc97947cb`\n            }\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setItems(result);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <ul>\n            {items.map(item => (\n              <li key={item.id}>\n                {item.name} \n              </li>\n            ))}\n          </ul>\n        );\n      }\n    \n}\n\nexport default CatAPI\n\n\n\n\n\n\n\n/* Works fine but trying to make it a function\nconst api = axios.create({\n    baseURL: `https://api.thecatapi.com/v1/breeds`,\n    headers: {\n        'x-api-key': `70333dc8-3e31-4380-b622-48fdc97947cb`        \n    }\n})\n\nclass CatAPI extends React.Component {\n    state = {\n        breeds: [],\n        breedImage: []\n    }\n\n    componentDidMount() { \n        this.mounted = true; \n    }\n    \n\n    constructor(){\n        super();\n        api.get('/').then(res =>{\n            if(this.mounted){\n                this.setState({breeds: res.data})\n            }\n            \n        })\n        \n    }\n    render() {\n      return (\n          <header>\n              \n              {this.state.breeds.map(breeds => \n                \n                <h2 key = {breeds.id}>\n                    \n                        <ul>\n                            <div>{breeds.name}</div>\n                            <div>{breeds.description}</div>\n                            <div>{breeds.temperament}</div>\n                            <div>Average Life Span: {breeds.life_span}</div>\n                            <div>Adaptability: {breeds.adaptability}</div>\n                            <div>Affection Level: {breeds.affection_level}</div>\n                        </ul>\n                    \n                </h2>)}\n          </header>\n      )\n    }\n}\n\nexport default CatAPI\n\n*/"]},"metadata":{},"sourceType":"module"}