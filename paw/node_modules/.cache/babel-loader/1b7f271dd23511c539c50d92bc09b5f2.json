{"ast":null,"code":"var _jsxFileName = \"/Users/mariummannan/Desktop/PAW-MASTER/PAW-project/paw/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport './Login.css';\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  return props.pop ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popUp\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-popUp\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Login\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            block: true,\n            size: \"lg\",\n            type: \"submit\",\n            disabled: !validateForm(),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.CloseButton, {\n          className: \"closeButton\",\n          onClick: () => props.setPopUp(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this) : \"\";\n}\n\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mariummannan/Desktop/PAW-MASTER/PAW-project/paw/src/Components/Login.js"],"names":["React","useState","Form","Button","ReactBootStrap","propTypes","Login","props","email","setEmail","password","setPassword","validateForm","length","handleSubmit","event","preventDefault","pop","e","target","value","setPopUp"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAElB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASW,YAAT,GAAwB;AACpB,WAAOJ,KAAK,CAACK,MAAN,GAAe,CAAf,IAAoBH,QAAQ,CAACG,MAAT,GAAkB,CAA7C;AACH;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACH;;AACH,SAAQT,KAAK,CAACU,GAAP,gBACH;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACA,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEH,YAAhB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,IAAI,EAAC,IAAjB;AAAsB,YAAA,SAAS,EAAC,OAAhC;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,SAAS,MADb;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,KAAK,EAAEN,KAHX;AAII,cAAA,QAAQ,EAAGU,CAAD,IAAOT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,IAAI,EAAC,IAAjB;AAAsB,YAAA,SAAS,EAAC,UAAhC;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAEV,QAFX;AAGI,cAAA,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAkBI,QAAC,MAAD;AAAQ,YAAA,KAAK,MAAb;AAAc,YAAA,IAAI,EAAC,IAAnB;AAAwB,YAAA,IAAI,EAAC,QAA7B;AAAsC,YAAA,QAAQ,EAAE,CAACR,YAAY,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAuBA,QAAC,cAAD,CAAgB,WAAhB;AAA4B,UAAA,SAAS,EAAC,aAAtC;AAAoD,UAAA,OAAO,EAAE,MAAML,KAAK,CAACc,QAAN,CAAe,KAAf;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADG,GA8BL,EA9BF;AA+BD;;GA3CQf,K;;KAAAA,K;AA6CT,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport './Login.css'\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\nfunction Login(props) {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    \n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n    }\n  return (props.pop) ? (\n      <div className='popUp'>\n        <div className='inner-popUp'>\n            <div className=\"Login\">\n            <Form onSubmit={handleSubmit}>\n                <Form.Group size=\"lg\" controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                    autoFocus\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                </Form.Group>\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                Login\n                </Button>\n            </Form>\n            <ReactBootStrap.CloseButton className='closeButton' onClick={() => props.setPopUp(false)}/>\n            </div>\n        </div>\n    </div>\n  ):\"\"\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}